import { formatTimeAgo } from "@/lib/utils";
import { Edit, Play, Timer } from "lucide-react";
import Image from "next/image";
import { Icons } from "../icons";
import { Badge } from "../ui/badge";
import { Button } from "../ui/button";
import { Checkbox } from "../ui/checkbox";
import { useDashboardContext } from "./Context";

export default function Table() {
  const { quizzes, folderWithQuizzes } = useDashboardContext();

  return (
    <div className="w-full table-auto border-separate border-spacing-3">
      <table className="w-full">
        <thead className="hidden sm:table-header-group">
          <tr className="*:text-start">
            <th className="min-w-3"></th>
            <th className="w-full">Name</th>
            <th className="w-40">Last Updated</th>
            <th className="w-40 hidden lg:table-cell">Created At</th>
            <th className="w-40"></th>
            <th className="w-3"></th>
          </tr>
        </thead>
        <tbody>
          {quizzes.map((quiz) => {
            return (
              <tr key={quiz.id} className="bg-white p-3 rounded-lg mb-3">
                <td className="p-2">
                  <Checkbox id="terms" />
                </td>
                <td className="w-full flex justify-start gap-2 p-2">
                  <div className="flex flex-col rounded-md overflow-hidden">
                    {quiz.image && quiz.image.url ? (
                      <Image
                        src={quiz.image.url}
                        alt="question Image"
                        width={100}
                        height={75}
                        priority
                        style={{
                          aspectRatio: "4 / 3",
                        }}
                        className="rounded-md"
                      />
                    ) : (
                      <div className="w-[100px] h-[75px] flex justify-center items-center object-contain rounded-md overflow-hidden min-w-16 sm:min-w-20 bg-[hsl(var(--primary)_/_10%)] ">
                        <Icons.quizzes className="w-7 h-7 fill-primary" />
                      </div>
                    )}
                  </div>
                  <div className="flex flex-col gap-1 justify-center">
                    <p className="truncate font-medium">{quiz.title}</p>
                    <div className="flex gap-1">
                      <Badge className="bg-primary/30 hover:bg-primary/30 text-primary gap-0.5">
                        <Icons.quizzes className="w-3 h-3 fill-primary" />8
                        Question
                      </Badge>
                    </div>
                  </div>
                </td>
                <td className="hidden sm:table-cell p-2">
                  <p className="max-w-40 truncate">
                    {formatTimeAgo(quiz.updatedAt)}
                  </p>
                </td>
                <td className="hidden lg:table-cell truncate p-2">
                  <p className="max-w-40 truncate">
                    {formatTimeAgo(quiz.createdAt)}
                  </p>
                </td>
                <td className="hidden sm:table-cell p-2">
                  <div className="flex gap-2 justify-center">
                    <Button size="icon" className="">
                      <Play className="w-3 h-3" />
                    </Button>
                    <Button size="icon" className="bg-white text-foreground">
                      <Edit className="w-4 h-4" />
                    </Button>
                  </div>
                </td>
                <td className="p-2">|</td>
              </tr>
            );
          })}
        </tbody>
      </table>
    </div>
  );
}
